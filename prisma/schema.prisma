// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Turf {
  id          String   @id @default(cuid())
  name        String
  venue       String
  sport       String
  size        String   // e.g., "11 a side", "8 a side", "6 a side"
  courtNumber String   // e.g., "Turf 1", "Turf 2", "Half Court 1"
  pricePerHour Int     // in INR
  maxPlayers  Int
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  bookings    Booking[]
  availabilities TurfAvailability[]
  conflicts   Conflict[]
}

model TurfAvailability {
  id          String   @id @default(cuid())
  turfId      String
  date        String   // YYYY-MM-DD format
  startTime   String   // HH:MM format
  endTime     String   // HH:MM format
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  turf        Turf     @relation(fields: [turfId], references: [id])
  bookings    Booking[]
}

model Booking {
  id            String   @id @default(cuid())
  turfId        String
  matchId       String?  // Link to match if created
  date          String   // YYYY-MM-DD format
  startTime     String   // HH:MM format
  endTime       String   // HH:MM format
  duration      Int      // in hours
  totalAmount   Int      // in INR
  status        String   @default("confirmed") // confirmed, cancelled, completed
  bookingType   String   @default("match") // match, practice, event
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  turf          Turf     @relation(fields: [turfId], references: [id])
  availability  TurfAvailability @relation(fields: [turfId], references: [id])
}

model Conflict {
  id          String   @id @default(cuid())
  turfId      String
  date        String   // YYYY-MM-DD format
  startTime   String   // HH:MM format
  endTime     String   // HH:MM format
  reason      String   // maintenance, weather, private_event
  status      String   @default("active") // active, resolved
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  turf        Turf     @relation(fields: [turfId], references: [id])
}